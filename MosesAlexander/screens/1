// import React, { useContext, useState } from 'react';
// import { View, Text, FlatList, StyleSheet, TextInput, TouchableOpacity } from 'react-native';
// import { Feather } from '@expo/vector-icons';
// import { TransactionContext } from './TransactionContext';

// const TransactionHistoryScreen = ({ navigation }) => {
//   const { transactionHistory } = useContext(TransactionContext); // Ambil riwayat transaksi
//   const [searchQuery, setSearchQuery] = useState(''); // State pencarian

//   const filteredTransactions = transactionHistory.filter(transaction =>
//     transaction.traceNo.includes(searchQuery)
//   );

//   const renderItem = ({ item }) => (
//     <TouchableOpacity 
//       style={styles.transactionItem} 
//       onPress={() => navigation.navigate('Detail', { transaction: item })}
//     >
//       <View style={styles.transactionDetails}>
//         <Text style={styles.traceNo}>Trace No. {item.traceNo}</Text>
//         <Text style={styles.transactionType}>{item.type}</Text>
//         <Text style={styles.status}>
//           {item.status === 'success' ? 'Pembayaran Berhasil!' : item.status}
//         </Text>
//       </View>
//       <View style={styles.transactionMeta}>
//         <Text style={styles.date}>{item.date}</Text>
//         <Text style={styles.amount}>{item.amount}</Text>
//       </View>
//     </TouchableOpacity>
//   );
  

//   return (
//     <View style={styles.container}>
//       <View style={styles.headerContainer}>
//         <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
//           <Feather name="arrow-left" size={32} color="#000" />
//         </TouchableOpacity>

//         <Text style={styles.header}>Riwayat Transaksi</Text>
//       </View>

//       <View style={styles.searchContainer}>
//         <Feather name="search" size={20} color="#aaa" />
//         <TextInput
//           style={styles.searchInput}
//           placeholder="Cari no trace..."
//           value={searchQuery}
//           onChangeText={setSearchQuery}
//         />
//       </View>

//       <FlatList
//         data={filteredTransactions}
//         keyExtractor={item => item.id}
//         renderItem={renderItem}
//         ItemSeparatorComponent={() => <View style={styles.separator} />}
//       />
//     </View>
//   );
// };

// const styles = StyleSheet.create({
//   container: { 
//     flex: 1, 
//     backgroundColor: '#fff', 
//     padding: 20, 
//   },
//   headerContainer: {
//     flexDirection: 'row', 
//     alignItems: 'center', 
//     marginBottom: 20,
//     paddingTop: 20, 
//   },
//   backButton: {
//     paddingRight: 10, 
//   },
//   header: {
//     fontSize: 20,
//     fontWeight: 'bold',
//     textAlign: 'center',
//     flex: 1,
//   },
//   searchContainer: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     backgroundColor: '#f1f1f1',
//     borderRadius: 10,
//     paddingHorizontal: 10,
//     marginBottom: 20,
//   },
//   searchInput: {
//     flex: 1,
//     padding: 10,
//     fontSize: 16,
//   },
//   transactionItem: { 
//     flexDirection: 'row', 
//     justifyContent: 'space-between', 
//     paddingVertical: 10, 
//   },
//   transactionDetails: { 
//     flex: 1, 
//   },
//   traceNo: { 
//     fontSize: 16, 
//     fontWeight: 'bold', 
//   },
//   transactionType: { 
//     fontSize: 14, 
//     color: '#555', 
//   },
//   status: { 
//     fontSize: 14, 
//     color: 'green', 
//   },
//   transactionMeta: { 
//     alignItems: 'flex-end', 
//   },
//   date: { 
//     fontSize: 12, 
//     color: '#888', 
//   },
//   amount: { 
//     fontSize: 16, 
//     fontWeight: 'bold', 
//   },
//   separator: { 
//     height: 1, 
//     backgroundColor: '#ddd', 
//     marginVertical: 5, 
//   },
// });

// export default TransactionHistoryScreen;




// import React, { useContext, useEffect, useState, useRef } from 'react';
// import { View, Text, TextInput, StyleSheet, Alert, Keyboard, TouchableOpacity } from 'react-native';
// import { TransactionContext } from './TransactionContext';
// import { useNavigation } from '@react-navigation/native'; 
// import { Feather } from '@expo/vector-icons'; 

// const PinConfirmationScreen = () => {
//   const { transactionData, updateTransactionData, addTransactionToHistory } = useContext(TransactionContext); 
//   const maxPinLength = 6;
//   const correctPin = '080604';
//   const [isError, setIsError] = useState(false);
//   const inputRef = useRef(null);
//   const navigation = useNavigation();

//   useEffect(() => {
//     if (transactionData.pin.length === maxPinLength) {
//       handleConfirm(transactionData.pin);
//     }
//   }, [transactionData.pin]);

//   const handleConfirm = (enteredPin) => {
//     const { packageData } = transactionData;
  
//     if (enteredPin === correctPin) {
//       const newTransaction = {
//         id: Math.random().toString(),
//         traceNo: Math.floor(Math.random() * 1000000).toString(),
//         type: packageData?.value,
//         date: new Date().toLocaleString(),
//         amount: `Rp ${packageData?.price.toLocaleString()}`,
//         terminal: 'REFUND',
//         merchant: '00005000014972',
//         transactionType: 'SALE',
//         cardType: 'Kartu UNIONPAY CREDIT',
//         cardNumber: '************0005',
//         batch: '000004',
//         referenceNo: '000024',
//         approvalCode: '093836',
//       };
  
//       addTransactionToHistory(newTransaction); // Tambahkan ke riwayat transaksi
  
//       Alert.alert('Pembayaran berhasil!', 'Transaksi Anda telah berhasil diproses.');
//       updateTransactionData('transactionStatus', 'success');
//       navigation.navigate('TransactionSuccess');
//     } else {
//       setIsError(true);
//       setTimeout(() => {
//         updateTransactionData('pin', '');
//         setIsError(false);
//         inputRef.current?.focus();
//       }, 1000);
//     }
//   };
  

//   const handlePinChange = (input) => {
//     if (isError) setIsError(false); // Reset status error
//     if (input.length <= maxPinLength) {
//       updateTransactionData('pin', input);
//     }
//   };

//   return (
//     <View style={styles.container}>
//       <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
//         <Feather name="arrow-left" size={32} color="#000" />
//       </TouchableOpacity>

//       <Text style={styles.header}>Masukkan PIN Anda</Text>
//       <Text style={isError ? styles.errorText : styles.instruction}>
//         {isError ? 'PIN salah. Silahkan coba lagi.' : 'Masukkan PIN aplikasi Anda.'}
//       </Text>

//       <View style={styles.pinContainer}>
//         {Array.from({ length: maxPinLength }).map((_, index) => (
//           <View
//             key={index}
//             style={
//               index < transactionData.pin.length
//                 ? isError ? styles.errorCircle : styles.filledCircle
//                 : styles.emptyCircle
//             }
//           />
//         ))}
//       </View>

//       <TextInput
//         ref={inputRef}
//         style={styles.hiddenInput}
//         value={transactionData.pin}
//         onChangeText={handlePinChange}
//         keyboardType="numeric"
//         maxLength={maxPinLength}
//         autoFocus
//         secureTextEntry
//       />
//     </View>
//   );
// };

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#fff',
//     justifyContent: 'center',
//     alignItems: 'center',
//     padding: 20,
//   },
//   backButton: {
//     position: 'absolute',
//     top: 40,
//     left: 20,
//   },
//   header: {
//     fontSize: 20,
//     fontWeight: 'bold',
//     marginBottom: 20,
//   },
//   instruction: {
//     fontSize: 16,
//     marginBottom: 20,
//   },
//   errorText: {
//     fontSize: 16,
//     color: 'red',
//     marginBottom: 20,
//   },
//   pinContainer: {
//     flexDirection: 'row',
//     marginBottom: 30,
//   },
//   filledCircle: {
//     width: 20,
//     height: 20,
//     borderRadius: 10,
//     backgroundColor: '#007bff',
//     margin: 10,
//   },
//   emptyCircle: {
//     width: 20,
//     height: 20,
//     borderRadius: 10,
//     backgroundColor: '#dcdcdc',
//     margin: 10,
//   },
//   errorCircle: {
//     width: 20,
//     height: 20,
//     borderRadius: 10,
//     backgroundColor: 'red',
//     margin: 10,
//   },
//   hiddenInput: {
//     width: 1,
//     height: 1,
//     opacity: 0.01,
//   },
// });

// export default PinConfirmationScreen;
